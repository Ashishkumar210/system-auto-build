name: Local CI/CD (self-hosted)

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Build JAR using Maven
      - name: Build JAR
        shell: powershell
        run: mvn -B clean package -DskipTests

      # Step 4: Stop and remove any existing containers (fail-safe)
      - name: Stop and remove existing containers
        shell: powershell
        run: |
          $containers = docker ps -aq -f "name=springboot-app"
          if ($containers) {
              Write-Host "Removing existing Spring Boot container..."
              docker rm -f $containers
          } else {
              Write-Host "No existing Spring Boot container found."
          }

          $containers = docker ps -aq -f "name=mysql-db"
          if ($containers) {
              Write-Host "Removing existing MySQL container..."
              docker rm -f $containers
          } else {
              Write-Host "No existing MySQL container found."
          }

      # Step 5: Start Docker Compose (build images and start containers)
      - name: Start Docker Compose
        shell: powershell
        run: docker-compose -f docker-compose.yml up --build -d

      # Step 6: Wait for MySQL container to be ready
      - name: Wait for MySQL container
        shell: powershell
        run: |
          Write-Host "Waiting for MySQL to be ready..."
          do {
              Start-Sleep -Seconds 3
              docker exec mysql-db mysqladmin ping -uroot -pAshish@2100 --silent
              $status = $LASTEXITCODE
          } while ($status -ne 0)
          Write-Host "MySQL is ready."

      # Step 7: Confirm containers are running
      - name: Confirm containers are running
        shell: powershell
        run: docker ps

      # Step 8: Check Spring Boot logs
      - name: Check Spring Boot logs
        shell: powershell
        run: docker logs springboot-app
